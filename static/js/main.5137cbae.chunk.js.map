{"version":3,"sources":["container/MenuContainer.js","view/HomeView.js","view/PostView.js","component/PostCard.js","component/PostCardList.js","container/ContentContainer.js","container/SummaryContainer.js","component/AppBarView.js","layout/MainLayout.js","App.js","store/Store.js","store/index.js","index.js"],"names":["MenuContainer","to","Component","HomeView","PostView","props","query","match","params","inject","setTitle","store","context","title","text","id","index","className","as","onClick","PostCardList","category","cards","Array","from","length","map","r","i","image","ContentContainer","exact","path","component","Home","Post","AppBarView","AppBar","position","Toolbar","variant","IconButton","edge","color","aria-label","this","toggleMenuView","Typography","name","style","cursor","marginLeft","InputBase","placeholder","inputProps","observer","MainLayout","console","log","menuVisible","onScroll","App","basename","Store","boundClass","_","debounce","e","target","scrollTop","makeObservable","observable","stores","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5137cbae.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nclass MenuContainer extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Link to=\"/study\">공부</Link>\r\n        <Link to=\"/review\">리뷰</Link>\r\n        <Link to=\"/scrap\">스크랩</Link>\r\n        <Link to=\"/things\">이것저것</Link>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuContainer;\r\n","import React, { Component } from \"react\";\r\n\r\nclass HomeView extends Component {\r\n  render() {\r\n    return <div>home</div>;\r\n  }\r\n}\r\n\r\nexport default HomeView;\r\n","import React from \"react\";\r\n\r\nconst PostView = (props) => {\r\n  const { query } = props.match.params;\r\n  return <div>Post : {query}</div>;\r\n};\r\n\r\nexport default PostView;\r\n","import React from \"react\";\r\nimport { inject } from \"mobx-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nconst PostCard = ({ context: { title, text, id }, index, ...props }) => {\r\n  const { setTitle } = props;\r\n  return (\r\n    <Link\r\n      className=\"post-card text-selection-disabled\"\r\n      as=\"div\"\r\n      to={`/nooblog/post/${title}`}\r\n      onClick={() => setTitle(title)}\r\n    >\r\n      <div className=\"image\"></div>\r\n      <div className=\"title\">{title}</div>\r\n      <div className=\"content\">{text}</div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default inject(({ store }) => ({ setTitle: store.setTitle }))(PostCard);\r\n","import React from \"react\";\r\nimport { PostCard } from \"../component\";\r\nimport \"./style.css\";\r\n\r\nconst PostCardList = ({ context, match, ...props }) => {\r\n  const { category } = match.params;\r\n  const cards = Array.from({ length: 5 }).map((r, i) => (\r\n    <PostCard\r\n      key={`postcard${i}`}\r\n      index={i}\r\n      context={{\r\n        title: `Post ${i}`,\r\n        image: null,\r\n        text: `Post content ${i}`,\r\n      }}\r\n    />\r\n  ));\r\n  return (\r\n    <div className=\"post-container\">\r\n      <div className=\"post-list-category\">{category}</div>\r\n      <div className=\"post-list\">{cards}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostCardList;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Home, Post } from \"../view\";\r\nimport { PostCardList } from \"../component\";\r\n\r\nclass ContentContainer extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/post/:query\" component={Post} />\r\n        <Route exact path=\"/:category\" component={PostCardList} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\nexport default ContentContainer;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SummaryContainer extends Component {\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default SummaryContainer;\r\n","import React, { Component } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\n// @inject(\"store\")\r\n// @observer\r\nclass AppBarView extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.store = props.store;\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <AppBar position=\"static\" className=\"text-selection-disabled\">\r\n        <Toolbar variant=\"dense\">\r\n          <IconButton\r\n            edge=\"start\"\r\n            className=\"IconButton\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={this.props.store.toggleMenuView}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Link to=\"/\">\r\n            <Typography\r\n              name=\"title\"\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              NOOBLOG\r\n            </Typography>\r\n          </Link>\r\n          <Typography\r\n            variant=\"h5\"\r\n            color=\"inherit\"\r\n            style={{ marginLeft: \"130px\" }}\r\n          >\r\n            {this.props.store.title}\r\n          </Typography>\r\n\r\n          <div className=\"app-bar-search\">\r\n            <SearchIcon className=\"search-icon\" />\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject(\"store\")(observer(AppBarView));\r\n","import React, { Component } from \"react\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { ContentContainer, MenuContainer } from \"../container\";\r\nimport AppBarView from \"../component/AppBarView\";\r\nimport \"./style.css\";\r\n\r\n// @inject(\"store\")\r\n// @observer\r\nclass MainLayout extends Component {\r\n  render() {\r\n    console.log(\"@render\", this, this.props.store.menuVisible);\r\n    return (\r\n      <div className=\"layout\">\r\n        <AppBarView />\r\n        {this.props.store.menuVisible && (\r\n          <div className={`header-zone text-selection-disabled`}>\r\n            <MenuContainer />\r\n          </div>\r\n        )}\r\n        <div\r\n          className=\"body-zone custom-scrollbar\"\r\n          onScroll={this.props.store.onScroll}\r\n        >\r\n          <div className=\"content-view\">\r\n            <ContentContainer />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inject(\"store\")(observer(MainLayout));\r\n","import React from \"react\";\r\nimport Layout from \"./layout/MainLayout\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename=\"/nooblog\">\r\n      <Layout />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { makeObservable, action, observable } from \"mobx\";\r\nimport { boundClass } from \"autobind-decorator\";\r\nimport _ from \"lodash\";\r\n\r\nconst Store = boundClass(\r\n  class {\r\n    title = \"\";\r\n    menuVisible = true;\r\n\r\n    constructor() {\r\n      this.onScroll = _.debounce((e) => {\r\n        if (this.menuVisible) {\r\n          this.menuVisible = false;\r\n        } else if (e.target.scrollTop === 0) {\r\n          this.menuVisible = true;\r\n        }\r\n        console.log(\"@onScroll\", e, this.menuVisible);\r\n      }, 33);\r\n      makeObservable(this, {\r\n        title: observable,\r\n        menuVisible: observable,\r\n      });\r\n    }\r\n\r\n    setTitle(title) {\r\n      this.title = title;\r\n      console.log(\"@setTitle\", this.title);\r\n    }\r\n\r\n    toggleMenuView() {\r\n      this.menuVisible = !this.menuVisible;\r\n      console.log(\"@toggleMenuView\", this.menuVisible);\r\n    }\r\n  }\r\n);\r\n\r\nconst store = new Store();\r\nexport default Store;\r\nexport { store };\r\n","import { store } from \"./Store\";\r\n\r\nconst stores = {\r\n  store,\r\n};\r\n\r\nexport default stores;\r\nexport { store };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport stores from \"./store\";\r\nimport { Provider } from \"mobx-react\";\r\nReactDOM.render(\r\n  <Provider {...stores}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}